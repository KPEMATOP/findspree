# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "ubuntu/trusty64"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  config.vm.network "private_network", ip: "192.168.33.15"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.

  config.vm.provision "shell", inline: <<-SHELL

     sudo chmod +x /vagrant/bash/create_user.sh
     sudo chmod +x /vagrant/bash/install_go.sh
     sudo /vagrant/bash/create_user.sh game
     sudo /vagrant/bash/install_go.sh
     	
     sudo cp /vagrant/configs/locale /etc/default/locale
     sudo cp /vagrant/configs/etc/profile /etc/profile
     sudo cp -a /vagrant/configs/sources.list.d/. /etc/apt/sources.list.d/
     
     sudo locale-gen en_US.UTF-8
     sudo dpkg-reconfigure locales
     
     curl -sL https://deb.nodesource.com/setup_5.x | sudo -E bash -
     sudo add-apt-repository ppa:ondrej/php
     wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
     
     
     sudo apt-get update
     sudo apt-get install -y php7.0 php7.0-cli php7.0-curl php7.0-fpm php7.0-mbstring php7.0-mcrypt php7.0-pgsql php7.0-zip nginx nodejs build-essential postgresql-9.4


     sudo cp -a /vagrant/configs/postgresql/. /etc/postgresql/9.4/main/
     sudo chown -R postgres:postgres  /etc/postgresql/9.4/main/

     sudo cp -a /vagrant/configs/php/. /etc/php/7.0/fpm/
     sudo chown -R root:root /etc/php/7.0/fpm/

     sudo cp -a /vagrant/configs/nginx/sites-available/. /etc/nginx/sites-available/
     sudo chown -R root:root  /etc/nginx/sites-available/
     sudo ln -s /etc/nginx/sites-available/* /etc/nginx/sites-enabled/

     sudo -u postgres psql  template1 -c "ALTER USER postgres with encrypted password 'postgres';CREATE USER game WITH PASSWORD 'game';"
     sudo -u postgres psql  template1 -c "CREATE DATABASE game_main WITH OWNER postgres ENCODING 'UTF8' LC_COLLATE = 'en_US.UTF-8' LC_CTYPE = 'en_US.UTF-8' TEMPLATE = template0;"
     sudo -u postgres psql  template1 -c "GRANT ALL PRIVILEGES ON DATABASE game_main to game;"
     sudo -u postgres psql  template1 -c "SET TIME ZONE 'UTC';"

     sudo service postgresql restart 
     sudo service php7.0-fpm restart
     sudo service nginx restart

     sudo mkdir -p /home/game/.ssh
     sudo chmod 700 /home/game/.ssh
     sudo cp /vagrant/github_rsa /home/game/.ssh/id_rsa
     sudo chmod 600 /home/game/.ssh/id_rsa
     sudo chown -R game:game /home/game/.ssh

     chown -R www-data:www-data /www

     sudo -s -u game -- <<EOF
        HOME=/home/game
        ssh -oStrictHostKeyChecking=no git@github.com
EOF
     echo "Finished"
   SHELL
   config.vm.synced_folder "../app", "/www", owner: "www-data", group: "www-data"
end
